{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "servers_cmakers_name": {
            "defaultValue": "cmakers",
            "type": "String"
        },
        "topics_CMakers_name": {
            "defaultValue": "CMakers",
            "type": "String"
        },
        "namespaces_cmakers_name": {
            "defaultValue": "cmakers",
            "type": "String"
        },
        "storageAccounts_cmakers_name": {
            "defaultValue": "cmakers",
            "type": "String"
        },
        "dnszones_demo.cloudmakers.xyz_name": {
            "defaultValue": "demo.cloudmakers.xyz",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.EventGrid/topics",
            "apiVersion": "2018-01-01",
            "name": "[parameters('topics_CMakers_name')]",
            "location": "westeurope",
            "properties": {
                "provisioningState": "Succeeded",
                "endpoint": "https://cmakers.westeurope-1.eventgrid.azure.net/api/events"
            }
        },
        {
            "type": "Microsoft.Network/dnszones",
            "apiVersion": "2018-05-01",
            "name": "[parameters('dnszones_demo.cloudmakers.xyz_name')]",
            "location": "global",
            "properties": {
                "zoneType": "Public"
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces",
            "apiVersion": "2017-04-01",
            "name": "[parameters('namespaces_cmakers_name')]",
            "location": "West Europe",
            "sku": {
                "name": "Standard",
                "tier": "Standard"
            },
            "properties": {
                "provisioningState": "Succeeded",
                "metricId": "[concat('b3326004-d167-473b-9ffe-c122de7a3ba8:', parameters('namespaces_cmakers_name'))]",
                "createdAt": "2019-04-26T21:05:08.74Z",
                "updatedAt": "2019-04-26T21:05:34.137Z",
                "serviceBusEndpoint": "[concat('https://', parameters('namespaces_cmakers_name'), '.servicebus.windows.net:443/')]",
                "status": "Active"
            }
        },
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2015-05-01-preview",
            "name": "[parameters('servers_cmakers_name')]",
            "location": "westeurope",
            "kind": "v12.0",
            "properties": {
                "administratorLogin": "[concat(parameters('servers_cmakers_name'), 'Admin')]",
                "version": "12.0"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-07-01",
            "name": "[parameters('storageAccounts_cmakers_name')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Network/dnszones/CNAME",
            "apiVersion": "2018-05-01",
            "name": "[concat(parameters('dnszones_demo.cloudmakers.xyz_name'), '/636919106509823124')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/dnszones', parameters('dnszones_demo.cloudmakers.xyz_name'))]"
            ],
            "properties": {
                "TTL": 60,
                "CNAMERecord": {
                    "cname": "cm-web-t-636919106509823124.azurewebsites.net"
                },
                "targetResource": {}
            }
        },
        {
            "type": "Microsoft.Network/dnszones/NS",
            "apiVersion": "2018-05-01",
            "name": "[concat(parameters('dnszones_demo.cloudmakers.xyz_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/dnszones', parameters('dnszones_demo.cloudmakers.xyz_name'))]"
            ],
            "properties": {
                "TTL": 172800,
                "NSRecords": [
                    {
                        "nsdname": "ns1-04.azure-dns.com."
                    },
                    {
                        "nsdname": "ns2-04.azure-dns.net."
                    },
                    {
                        "nsdname": "ns3-04.azure-dns.org."
                    },
                    {
                        "nsdname": "ns4-04.azure-dns.info."
                    }
                ],
                "targetResource": {}
            }
        },
        {
            "type": "Microsoft.Network/dnszones/SOA",
            "apiVersion": "2018-05-01",
            "name": "[concat(parameters('dnszones_demo.cloudmakers.xyz_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/dnszones', parameters('dnszones_demo.cloudmakers.xyz_name'))]"
            ],
            "properties": {
                "TTL": 3600,
                "SOARecord": {
                    "email": "azuredns-hostmaster.microsoft.com",
                    "expireTime": 2419200,
                    "host": "ns1-04.azure-dns.com.",
                    "minimumTTL": 300,
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1
                },
                "targetResource": {}
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/AuthorizationRules",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_cmakers_name'), '/RootManageSharedAccessKey')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_cmakers_name'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Manage",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_cmakers_name'), '/acquisition')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_cmakers_name'))]"
            ],
            "properties": {
                "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "enableBatchedOperations": false,
                "status": "Active",
                "supportOrdering": false,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_cmakers_name'), '/CreateIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_cmakers_name'), '/DbParameterization')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_cmakers_name'), '/DefragmentIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_cmakers_name'), '/DropIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_cmakers_name'), '/ForceLastGoodPlan')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_cmakers_name'), '/Default')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "auditingState": "New",
                "eventTypesToAudit": "PlainSQL_Success,PlainSQL_Failure,ParameterizedSQL_Success,ParameterizedSQL_Failure,StoredProcedure_Success,StoredProcedure_Failure,Login_Success,Login_Failure,TransactionManagement_Success,TransactionManagement_Failure",
                "fullAuditLogsTableName": "SQLDBAuditLogsCmakers",
                "auditLogsTableName": "Cmakers",
                "retentionDays": "0"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_cmakers_name'), '/master/Default')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "auditingState": "New",
                "eventTypesToAudit": "PlainSQL_Success,PlainSQL_Failure,ParameterizedSQL_Success,ParameterizedSQL_Failure,StoredProcedure_Success,StoredProcedure_Failure,Login_Success,Login_Failure,TransactionManagement_Success,TransactionManagement_Failure",
                "useServerDefault": "Enabled",
                "fullAuditLogsTableName": "SQLDBAuditLogsCmakersMaster",
                "auditLogsTableName": "CmakersMaster",
                "retentionDays": "0"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_cmakers_name'), '/master/Default')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "state": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "apiVersion": "2018-06-01-preview",
            "name": "[concat(parameters('servers_cmakers_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_cmakers_name'), '/master/current')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "status": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_cmakers_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers/elasticPools",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_cmakers_name'), '/', parameters('servers_cmakers_name'), 'Basic')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "kind": "pool",
            "properties": {
                "edition": "Basic",
                "dtu": 50,
                "databaseDtuMin": 0,
                "databaseDtuMax": 5,
                "storageMB": 5000,
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/encryptionProtector",
            "apiVersion": "2015-05-01-preview",
            "name": "[concat(parameters('servers_cmakers_name'), '/current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "kind": "servicemanaged",
            "properties": {
                "serverKeyName": "ServiceManaged",
                "serverKeyType": "ServiceManaged"
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2015-05-01-preview",
            "name": "[concat(parameters('servers_cmakers_name'), '/All')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "255.255.255.255"
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2015-05-01-preview",
            "name": "[concat(parameters('servers_cmakers_name'), '/AllowAllWindowsAzureIps')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
            }
        },
        {
            "type": "Microsoft.Sql/servers/keys",
            "apiVersion": "2015-05-01-preview",
            "name": "[concat(parameters('servers_cmakers_name'), '/ServiceManaged')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "kind": "servicemanaged",
            "properties": {
                "serverKeyType": "ServiceManaged"
            }
        },
        {
            "type": "Microsoft.Sql/servers/securityAlertPolicies",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_cmakers_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/vulnerabilityAssessments",
            "apiVersion": "2018-06-01-preview",
            "name": "[concat(parameters('servers_cmakers_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_cmakers_name'), '/acquisition/AzureProvisioner')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_cmakers_name'), 'acquisition')]",
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_cmakers_name'))]"
            ],
            "properties": {
                "lockDuration": "PT1M",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": false,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": false,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S"
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_cmakers_name'), '/acquisition/CatchAll-1')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_cmakers_name'), 'acquisition')]",
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_cmakers_name'))]"
            ],
            "properties": {
                "lockDuration": "PT1M",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": false,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": false,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S"
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_cmakers_name'), '/acquisition/CatchAll-2')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_cmakers_name'), 'acquisition')]",
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_cmakers_name'))]"
            ],
            "properties": {
                "lockDuration": "PT1M",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": false,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": false,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_cmakers_name'), '/t-636840925443329587')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]",
                "[resourceId('Microsoft.Sql/servers/elasticPools', parameters('servers_cmakers_name'), concat(parameters('servers_cmakers_name'), 'Basic'))]"
            ],
            "sku": {
                "name": "ElasticPool",
                "tier": "Basic"
            },
            "kind": "v12.0,user,pool",
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 2147483648,
                "elasticPoolId": "[resourceId('Microsoft.Sql/servers/elasticPools', parameters('servers_cmakers_name'), concat(parameters('servers_cmakers_name'), 'Basic'))]",
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_cmakers_name'), '/t-636919106509823124')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]",
                "[resourceId('Microsoft.Sql/servers/elasticPools', parameters('servers_cmakers_name'), concat(parameters('servers_cmakers_name'), 'Basic'))]"
            ],
            "sku": {
                "name": "ElasticPool",
                "tier": "Basic"
            },
            "kind": "v12.0,user,pool",
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 2147483648,
                "elasticPoolId": "[resourceId('Microsoft.Sql/servers/elasticPools', parameters('servers_cmakers_name'), concat(parameters('servers_cmakers_name'), 'Basic'))]",
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_cmakers_name'), '/t-636840925443329587/CreateIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_cmakers_name'), 't-636840925443329587')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_cmakers_name'), '/t-636919106509823124/CreateIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_cmakers_name'), 't-636919106509823124')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_cmakers_name'), '/t-636840925443329587/DbParameterization')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_cmakers_name'), 't-636840925443329587')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_cmakers_name'), '/t-636919106509823124/DbParameterization')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_cmakers_name'), 't-636919106509823124')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_cmakers_name'), '/t-636840925443329587/DefragmentIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_cmakers_name'), 't-636840925443329587')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_cmakers_name'), '/t-636919106509823124/DefragmentIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_cmakers_name'), 't-636919106509823124')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_cmakers_name'), '/t-636840925443329587/DropIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_cmakers_name'), 't-636840925443329587')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_cmakers_name'), '/t-636919106509823124/DropIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_cmakers_name'), 't-636919106509823124')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_cmakers_name'), '/t-636840925443329587/ForceLastGoodPlan')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_cmakers_name'), 't-636840925443329587')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_cmakers_name'), '/t-636919106509823124/ForceLastGoodPlan')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_cmakers_name'), 't-636919106509823124')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_cmakers_name'), '/t-636840925443329587/Default')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_cmakers_name'), 't-636840925443329587')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "auditingState": "New",
                "eventTypesToAudit": "PlainSQL_Success,PlainSQL_Failure,ParameterizedSQL_Success,ParameterizedSQL_Failure,StoredProcedure_Success,StoredProcedure_Failure,Login_Success,Login_Failure,TransactionManagement_Success,TransactionManagement_Failure",
                "useServerDefault": "Enabled",
                "fullAuditLogsTableName": "SQLDBAuditLogsCmakersT636840925443329587",
                "auditLogsTableName": "CmakersT636840925443329587",
                "retentionDays": "0"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_cmakers_name'), '/t-636919106509823124/Default')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_cmakers_name'), 't-636919106509823124')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "auditingState": "New",
                "eventTypesToAudit": "PlainSQL_Success,PlainSQL_Failure,ParameterizedSQL_Success,ParameterizedSQL_Failure,StoredProcedure_Success,StoredProcedure_Failure,Login_Success,Login_Failure,TransactionManagement_Success,TransactionManagement_Failure",
                "useServerDefault": "Enabled",
                "fullAuditLogsTableName": "SQLDBAuditLogsCmakersT636919106509823124",
                "auditLogsTableName": "CmakersT636919106509823124",
                "retentionDays": "0"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_cmakers_name'), '/t-636840925443329587/Default')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_cmakers_name'), 't-636840925443329587')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "state": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_cmakers_name'), '/t-636919106509823124/Default')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_cmakers_name'), 't-636919106509823124')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "state": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "apiVersion": "2018-06-01-preview",
            "name": "[concat(parameters('servers_cmakers_name'), '/t-636840925443329587/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_cmakers_name'), 't-636840925443329587')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "apiVersion": "2018-06-01-preview",
            "name": "[concat(parameters('servers_cmakers_name'), '/t-636919106509823124/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_cmakers_name'), 't-636919106509823124')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_cmakers_name'), '/t-636840925443329587/current')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_cmakers_name'), 't-636840925443329587')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "status": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_cmakers_name'), '/t-636919106509823124/current')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_cmakers_name'), 't-636919106509823124')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "status": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_cmakers_name'), '/t-636840925443329587/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_cmakers_name'), 't-636840925443329587')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_cmakers_name'), '/t-636919106509823124/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_cmakers_name'), 't-636919106509823124')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_cmakers_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_cmakers_name'), '/acquisition/AzureProvisioner/$Default')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', parameters('namespaces_cmakers_name'), 'acquisition', 'AzureProvisioner')]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_cmakers_name'), 'acquisition')]",
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_cmakers_name'))]"
            ],
            "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                    "sqlExpression": "1=1"
                }
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_cmakers_name'), '/acquisition/CatchAll-1/$Default')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', parameters('namespaces_cmakers_name'), 'acquisition', 'CatchAll-1')]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_cmakers_name'), 'acquisition')]",
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_cmakers_name'))]"
            ],
            "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                    "sqlExpression": "1=1"
                }
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_cmakers_name'), '/acquisition/CatchAll-2/$Default')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', parameters('namespaces_cmakers_name'), 'acquisition', 'CatchAll-2')]",
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('namespaces_cmakers_name'), 'acquisition')]",
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('namespaces_cmakers_name'))]"
            ],
            "properties": {
                "action": {},
                "filterType": "SqlFilter",
                "sqlFilter": {
                    "sqlExpression": "1=1"
                }
            }
        }
    ]
}